server {
    listen 80;
    server_name atlasofworlds.nightbreezeinn.fr localhost; # Added localhost for local testing if needed

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static assets directly
    location ~* \.(?:css|js|map|jpe?g|gif|png|ico|svg|woff2?|ttf|eot)$ {
        try_files $uri $uri/ =404;
        expires 1y; # Cache static assets for a long time
        add_header Cache-Control "public";
    }

    # Handle API requests by proxying to the backend service
    # The backend service will be named 'backend' in docker-compose
    location /api/ {
        # Ensure client's original Host header is passed
        proxy_set_header Host $host;
        # Pass client's IP address
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # The backend service will be available at http://backend:3001
        # where 'backend' is the service name in docker-compose
        # and 3001 is the port the backend app listens on inside its container.
        proxy_pass http://backend:3001/; # The trailing slash is important here

        # Increase proxy buffer sizes for potentially larger requests/responses
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Handle React routing: for any other request, serve index.html
    # This allows client-side routing to work correctly.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Optional: Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # Or a specific path for error pages
    }

    # Optional: Deny access to hidden files
    location ~ /\. {
        deny all;
    }
}